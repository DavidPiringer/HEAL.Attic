// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PersistenceMessages.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HEAL.Attic {

  /// <summary>Holder for reflection information generated from PersistenceMessages.proto</summary>
  public static partial class PersistenceMessagesReflection {

    #region Descriptor
    /// <summary>File descriptor for PersistenceMessages.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PersistenceMessagesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlQZXJzaXN0ZW5jZU1lc3NhZ2VzLnByb3RvEgpIRUFMLkF0dGljIosCCgZC",
            "dW5kbGUSGQoRdHJhbnNmb3JtZXJfZ3VpZHMYASADKAwSEgoKdHlwZV9ndWlk",
            "cxgCIAMoDBITCgtyb290X2JveF9pZBgDIAEoDRIeCgVib3hlcxgEIAMoCzIP",
            "LkhFQUwuQXR0aWMuQm94Eg8KB3N0cmluZ3MYBSADKAkSMgoHbGF5b3V0cxgG",
            "IAMoCzIhLkhFQUwuQXR0aWMuU3RvcmFibGVUeXBlTGF5b3V0Qm94Ei0KDHR5",
            "cGVNZXNzYWdlcxgIIAMoCzIXLkhFQUwuQXR0aWMuVHlwZU1lc3NhZ2USKQoK",
            "YXJyYXlJbmZvcxgJIAMoCzIVLkhFQUwuQXR0aWMuQXJyYXlJbmZvIqgBCgNC",
            "b3gSEwoLdHlwZV9tc2dfaWQYAiABKA0SKQoFdmFsdWUYAyABKAsyGi5IRUFM",
            "LkF0dGljLlNjYWxhclZhbHVlQm94EiwKBnZhbHVlcxgFIAEoCzIcLkhFQUwu",
            "QXR0aWMuUmVwZWF0ZWRWYWx1ZUJveBIzCgdtZW1iZXJzGAYgASgLMiIuSEVB",
            "TC5BdHRpYy5TdG9yYWJsZVR5cGVNZW1iZXJzQm94IlMKC1R5cGVNZXNzYWdl",
            "Eg8KB3R5cGVfaWQYASABKA0SHAoUZ2VuZXJpY190eXBlX21zZ19pZHMYAiAD",
            "KA0SFQoNdHJhbnNmb3JtZXJJZBgDIAEoDSJsCg5TY2FsYXJWYWx1ZUJveBIM",
            "CgRsb25nGAMgASgDEg4KBnVfbG9uZxgFIAEoBBINCgVmbG9hdBgGIAEoAhIO",
            "CgZkb3VibGUYByABKAESDQoFYnl0ZXMYCCABKAwSDgoGc19sb25nGAogASgS",
            "IqQEChBSZXBlYXRlZFZhbHVlQm94EioKBWJvb2xzGAEgASgLMhsuSEVBTC5B",
            "dHRpYy5SZXBlYXRlZEJvb2xCb3gSKAoEaW50cxgCIAEoCzIaLkhFQUwuQXR0",
            "aWMuUmVwZWF0ZWRJbnRCb3gSKgoFbG9uZ3MYAyABKAsyGy5IRUFMLkF0dGlj",
            "LlJlcGVhdGVkTG9uZ0JveBIrCgZ1X2ludHMYBCABKAsyGy5IRUFMLkF0dGlj",
            "LlJlcGVhdGVkVUludEJveBItCgd1X2xvbmdzGAUgASgLMhwuSEVBTC5BdHRp",
            "Yy5SZXBlYXRlZFVMb25nQm94EiwKBmZsb2F0cxgGIAEoCzIcLkhFQUwuQXR0",
            "aWMuUmVwZWF0ZWRGbG9hdEJveBIuCgdkb3VibGVzGAcgASgLMh0uSEVBTC5B",
            "dHRpYy5SZXBlYXRlZERvdWJsZUJveBIrCgZzX2ludHMYCCABKAsyGy5IRUFM",
            "LkF0dGljLlJlcGVhdGVkU0ludEJveBItCgdzX2xvbmdzGAkgASgLMhwuSEVB",
            "TC5BdHRpYy5SZXBlYXRlZFNMb25nQm94EjIKBGt2cHMYCiABKAsyJC5IRUFM",
            "LkF0dGljLlJlcGVhdGVkS2V5VmFsdWVQYWlyc0JveBITCgtjb21wYXJlcl9p",
            "ZBgLIAEoDRIYChBjb21wYXJlcl90eXBlX2lkGAwgASgNEhUKDWFycmF5X2lu",
            "Zm9faWQYDSABKA0iPwoJQXJyYXlJbmZvEgwKBHJhbmsYASABKAUSDwoHbGVu",
            "Z3RocxgCIAMoBRITCgtsb3dlckJvdW5kcxgDIAMoBSJPChZTdG9yYWJsZVR5",
            "cGVNZW1iZXJzQm94Eh8KF3N0b3JhYmxlX3R5cGVfbGF5b3V0X2lkGAEgASgN",
            "EhQKDHZhbHVlX2JveF9pZBgCIAMoDSIhCg9SZXBlYXRlZEJvb2xCb3gSDgoG",
            "dmFsdWVzGAEgAygIIiAKDlJlcGVhdGVkSW50Qm94Eg4KBnZhbHVlcxgBIAMo",
            "BSIhCg9SZXBlYXRlZExvbmdCb3gSDgoGdmFsdWVzGAEgAygDIiEKD1JlcGVh",
            "dGVkVUludEJveBIOCgZ2YWx1ZXMYASADKA0iIgoQUmVwZWF0ZWRVTG9uZ0Jv",
            "eBIOCgZ2YWx1ZXMYASADKAQiIgoQUmVwZWF0ZWRGbG9hdEJveBIOCgZ2YWx1",
            "ZXMYASADKAIiIwoRUmVwZWF0ZWREb3VibGVCb3gSDgoGdmFsdWVzGAEgAygB",
            "IiEKD1JlcGVhdGVkU0ludEJveBIOCgZ2YWx1ZXMYASADKBEiIgoQUmVwZWF0",
            "ZWRTTG9uZ0JveBIOCgZ2YWx1ZXMYASADKBIiOAoYUmVwZWF0ZWRLZXlWYWx1",
            "ZVBhaXJzQm94EgwKBGtleXMYASADKA0SDgoGdmFsdWVzGAIgAygNIkkKFVN0",
            "b3JhYmxlVHlwZUxheW91dEJveBIRCgl0eXBlX2d1aWQYASABKA0SDgoGcGFy",
            "ZW50GAIgASgNEg0KBW5hbWVzGAMgAygNYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HEAL.Attic.Bundle), global::HEAL.Attic.Bundle.Parser, new[]{ "TransformerGuids", "TypeGuids", "RootBoxId", "Boxes", "Strings", "Layouts", "TypeMessages", "ArrayInfos" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HEAL.Attic.Box), global::HEAL.Attic.Box.Parser, new[]{ "TypeMsgId", "Value", "Values", "Members" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HEAL.Attic.TypeMessage), global::HEAL.Attic.TypeMessage.Parser, new[]{ "TypeId", "GenericTypeMsgIds", "TransformerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HEAL.Attic.ScalarValueBox), global::HEAL.Attic.ScalarValueBox.Parser, new[]{ "Long", "ULong", "Float", "Double", "Bytes", "SLong" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HEAL.Attic.RepeatedValueBox), global::HEAL.Attic.RepeatedValueBox.Parser, new[]{ "Bools", "Ints", "Longs", "UInts", "ULongs", "Floats", "Doubles", "SInts", "SLongs", "Kvps", "ComparerId", "ComparerTypeId", "ArrayInfoId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HEAL.Attic.ArrayInfo), global::HEAL.Attic.ArrayInfo.Parser, new[]{ "Rank", "Lengths", "LowerBounds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HEAL.Attic.StorableTypeMembersBox), global::HEAL.Attic.StorableTypeMembersBox.Parser, new[]{ "StorableTypeLayoutId", "ValueBoxId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HEAL.Attic.RepeatedBoolBox), global::HEAL.Attic.RepeatedBoolBox.Parser, new[]{ "Values" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HEAL.Attic.RepeatedIntBox), global::HEAL.Attic.RepeatedIntBox.Parser, new[]{ "Values" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HEAL.Attic.RepeatedLongBox), global::HEAL.Attic.RepeatedLongBox.Parser, new[]{ "Values" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HEAL.Attic.RepeatedUIntBox), global::HEAL.Attic.RepeatedUIntBox.Parser, new[]{ "Values" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HEAL.Attic.RepeatedULongBox), global::HEAL.Attic.RepeatedULongBox.Parser, new[]{ "Values" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HEAL.Attic.RepeatedFloatBox), global::HEAL.Attic.RepeatedFloatBox.Parser, new[]{ "Values" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HEAL.Attic.RepeatedDoubleBox), global::HEAL.Attic.RepeatedDoubleBox.Parser, new[]{ "Values" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HEAL.Attic.RepeatedSIntBox), global::HEAL.Attic.RepeatedSIntBox.Parser, new[]{ "Values" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HEAL.Attic.RepeatedSLongBox), global::HEAL.Attic.RepeatedSLongBox.Parser, new[]{ "Values" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HEAL.Attic.RepeatedKeyValuePairsBox), global::HEAL.Attic.RepeatedKeyValuePairsBox.Parser, new[]{ "Keys", "Values" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HEAL.Attic.StorableTypeLayoutBox), global::HEAL.Attic.StorableTypeLayoutBox.Parser, new[]{ "TypeGuid", "Parent", "Names" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Bundle : pb::IMessage<Bundle> {
    private static readonly pb::MessageParser<Bundle> _parser = new pb::MessageParser<Bundle>(() => new Bundle());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Bundle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HEAL.Attic.PersistenceMessagesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Bundle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Bundle(Bundle other) : this() {
      transformerGuids_ = other.transformerGuids_.Clone();
      typeGuids_ = other.typeGuids_.Clone();
      rootBoxId_ = other.rootBoxId_;
      boxes_ = other.boxes_.Clone();
      strings_ = other.strings_.Clone();
      layouts_ = other.layouts_.Clone();
      typeMessages_ = other.typeMessages_.Clone();
      arrayInfos_ = other.arrayInfos_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Bundle Clone() {
      return new Bundle(this);
    }

    /// <summary>Field number for the "transformer_guids" field.</summary>
    public const int TransformerGuidsFieldNumber = 1;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_transformerGuids_codec
        = pb::FieldCodec.ForBytes(10);
    private readonly pbc::RepeatedField<pb::ByteString> transformerGuids_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> TransformerGuids {
      get { return transformerGuids_; }
    }

    /// <summary>Field number for the "type_guids" field.</summary>
    public const int TypeGuidsFieldNumber = 2;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_typeGuids_codec
        = pb::FieldCodec.ForBytes(18);
    private readonly pbc::RepeatedField<pb::ByteString> typeGuids_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> TypeGuids {
      get { return typeGuids_; }
    }

    /// <summary>Field number for the "root_box_id" field.</summary>
    public const int RootBoxIdFieldNumber = 3;
    private uint rootBoxId_;
    /// <summary>
    /// index into boxes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RootBoxId {
      get { return rootBoxId_; }
      set {
        rootBoxId_ = value;
      }
    }

    /// <summary>Field number for the "boxes" field.</summary>
    public const int BoxesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::HEAL.Attic.Box> _repeated_boxes_codec
        = pb::FieldCodec.ForMessage(34, global::HEAL.Attic.Box.Parser);
    private readonly pbc::RepeatedField<global::HEAL.Attic.Box> boxes_ = new pbc::RepeatedField<global::HEAL.Attic.Box>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HEAL.Attic.Box> Boxes {
      get { return boxes_; }
    }

    /// <summary>Field number for the "strings" field.</summary>
    public const int StringsFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_strings_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> strings_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Strings {
      get { return strings_; }
    }

    /// <summary>Field number for the "layouts" field.</summary>
    public const int LayoutsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::HEAL.Attic.StorableTypeLayoutBox> _repeated_layouts_codec
        = pb::FieldCodec.ForMessage(50, global::HEAL.Attic.StorableTypeLayoutBox.Parser);
    private readonly pbc::RepeatedField<global::HEAL.Attic.StorableTypeLayoutBox> layouts_ = new pbc::RepeatedField<global::HEAL.Attic.StorableTypeLayoutBox>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HEAL.Attic.StorableTypeLayoutBox> Layouts {
      get { return layouts_; }
    }

    /// <summary>Field number for the "typeMessages" field.</summary>
    public const int TypeMessagesFieldNumber = 8;
    private static readonly pb::FieldCodec<global::HEAL.Attic.TypeMessage> _repeated_typeMessages_codec
        = pb::FieldCodec.ForMessage(66, global::HEAL.Attic.TypeMessage.Parser);
    private readonly pbc::RepeatedField<global::HEAL.Attic.TypeMessage> typeMessages_ = new pbc::RepeatedField<global::HEAL.Attic.TypeMessage>();
    /// <summary>
    ///repeated uint32 transformer_ids = 7;          // transformer_id for each element of type_guids (same order)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HEAL.Attic.TypeMessage> TypeMessages {
      get { return typeMessages_; }
    }

    /// <summary>Field number for the "arrayInfos" field.</summary>
    public const int ArrayInfosFieldNumber = 9;
    private static readonly pb::FieldCodec<global::HEAL.Attic.ArrayInfo> _repeated_arrayInfos_codec
        = pb::FieldCodec.ForMessage(74, global::HEAL.Attic.ArrayInfo.Parser);
    private readonly pbc::RepeatedField<global::HEAL.Attic.ArrayInfo> arrayInfos_ = new pbc::RepeatedField<global::HEAL.Attic.ArrayInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HEAL.Attic.ArrayInfo> ArrayInfos {
      get { return arrayInfos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Bundle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Bundle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!transformerGuids_.Equals(other.transformerGuids_)) return false;
      if(!typeGuids_.Equals(other.typeGuids_)) return false;
      if (RootBoxId != other.RootBoxId) return false;
      if(!boxes_.Equals(other.boxes_)) return false;
      if(!strings_.Equals(other.strings_)) return false;
      if(!layouts_.Equals(other.layouts_)) return false;
      if(!typeMessages_.Equals(other.typeMessages_)) return false;
      if(!arrayInfos_.Equals(other.arrayInfos_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= transformerGuids_.GetHashCode();
      hash ^= typeGuids_.GetHashCode();
      if (RootBoxId != 0) hash ^= RootBoxId.GetHashCode();
      hash ^= boxes_.GetHashCode();
      hash ^= strings_.GetHashCode();
      hash ^= layouts_.GetHashCode();
      hash ^= typeMessages_.GetHashCode();
      hash ^= arrayInfos_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      transformerGuids_.WriteTo(output, _repeated_transformerGuids_codec);
      typeGuids_.WriteTo(output, _repeated_typeGuids_codec);
      if (RootBoxId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(RootBoxId);
      }
      boxes_.WriteTo(output, _repeated_boxes_codec);
      strings_.WriteTo(output, _repeated_strings_codec);
      layouts_.WriteTo(output, _repeated_layouts_codec);
      typeMessages_.WriteTo(output, _repeated_typeMessages_codec);
      arrayInfos_.WriteTo(output, _repeated_arrayInfos_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += transformerGuids_.CalculateSize(_repeated_transformerGuids_codec);
      size += typeGuids_.CalculateSize(_repeated_typeGuids_codec);
      if (RootBoxId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RootBoxId);
      }
      size += boxes_.CalculateSize(_repeated_boxes_codec);
      size += strings_.CalculateSize(_repeated_strings_codec);
      size += layouts_.CalculateSize(_repeated_layouts_codec);
      size += typeMessages_.CalculateSize(_repeated_typeMessages_codec);
      size += arrayInfos_.CalculateSize(_repeated_arrayInfos_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Bundle other) {
      if (other == null) {
        return;
      }
      transformerGuids_.Add(other.transformerGuids_);
      typeGuids_.Add(other.typeGuids_);
      if (other.RootBoxId != 0) {
        RootBoxId = other.RootBoxId;
      }
      boxes_.Add(other.boxes_);
      strings_.Add(other.strings_);
      layouts_.Add(other.layouts_);
      typeMessages_.Add(other.typeMessages_);
      arrayInfos_.Add(other.arrayInfos_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            transformerGuids_.AddEntriesFrom(input, _repeated_transformerGuids_codec);
            break;
          }
          case 18: {
            typeGuids_.AddEntriesFrom(input, _repeated_typeGuids_codec);
            break;
          }
          case 24: {
            RootBoxId = input.ReadUInt32();
            break;
          }
          case 34: {
            boxes_.AddEntriesFrom(input, _repeated_boxes_codec);
            break;
          }
          case 42: {
            strings_.AddEntriesFrom(input, _repeated_strings_codec);
            break;
          }
          case 50: {
            layouts_.AddEntriesFrom(input, _repeated_layouts_codec);
            break;
          }
          case 66: {
            typeMessages_.AddEntriesFrom(input, _repeated_typeMessages_codec);
            break;
          }
          case 74: {
            arrayInfos_.AddEntriesFrom(input, _repeated_arrayInfos_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// each box represents and object in an object graph
  /// </summary>
  public sealed partial class Box : pb::IMessage<Box> {
    private static readonly pb::MessageParser<Box> _parser = new pb::MessageParser<Box>(() => new Box());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Box> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HEAL.Attic.PersistenceMessagesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Box() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Box(Box other) : this() {
      typeMsgId_ = other.typeMsgId_;
      Value = other.value_ != null ? other.Value.Clone() : null;
      Values = other.values_ != null ? other.Values.Clone() : null;
      Members = other.members_ != null ? other.Members.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Box Clone() {
      return new Box(this);
    }

    /// <summary>Field number for the "type_msg_id" field.</summary>
    public const int TypeMsgIdFieldNumber = 2;
    private uint typeMsgId_;
    /// <summary>
    /// uint32 transformer_id = 1;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TypeMsgId {
      get { return typeMsgId_; }
      set {
        typeMsgId_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 3;
    private global::HEAL.Attic.ScalarValueBox value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HEAL.Attic.ScalarValueBox Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 5;
    private global::HEAL.Attic.RepeatedValueBox values_;
    /// <summary>
    /// TypeBox type = 4;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HEAL.Attic.RepeatedValueBox Values {
      get { return values_; }
      set {
        values_ = value;
      }
    }

    /// <summary>Field number for the "members" field.</summary>
    public const int MembersFieldNumber = 6;
    private global::HEAL.Attic.StorableTypeMembersBox members_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HEAL.Attic.StorableTypeMembersBox Members {
      get { return members_; }
      set {
        members_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Box);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Box other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TypeMsgId != other.TypeMsgId) return false;
      if (!object.Equals(Value, other.Value)) return false;
      if (!object.Equals(Values, other.Values)) return false;
      if (!object.Equals(Members, other.Members)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TypeMsgId != 0) hash ^= TypeMsgId.GetHashCode();
      if (value_ != null) hash ^= Value.GetHashCode();
      if (values_ != null) hash ^= Values.GetHashCode();
      if (members_ != null) hash ^= Members.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TypeMsgId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(TypeMsgId);
      }
      if (value_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Value);
      }
      if (values_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Values);
      }
      if (members_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Members);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TypeMsgId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TypeMsgId);
      }
      if (value_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      if (values_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Values);
      }
      if (members_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Members);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Box other) {
      if (other == null) {
        return;
      }
      if (other.TypeMsgId != 0) {
        TypeMsgId = other.TypeMsgId;
      }
      if (other.value_ != null) {
        if (value_ == null) {
          value_ = new global::HEAL.Attic.ScalarValueBox();
        }
        Value.MergeFrom(other.Value);
      }
      if (other.values_ != null) {
        if (values_ == null) {
          values_ = new global::HEAL.Attic.RepeatedValueBox();
        }
        Values.MergeFrom(other.Values);
      }
      if (other.members_ != null) {
        if (members_ == null) {
          members_ = new global::HEAL.Attic.StorableTypeMembersBox();
        }
        Members.MergeFrom(other.Members);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 16: {
            TypeMsgId = input.ReadUInt32();
            break;
          }
          case 26: {
            if (value_ == null) {
              value_ = new global::HEAL.Attic.ScalarValueBox();
            }
            input.ReadMessage(value_);
            break;
          }
          case 42: {
            if (values_ == null) {
              values_ = new global::HEAL.Attic.RepeatedValueBox();
            }
            input.ReadMessage(values_);
            break;
          }
          case 50: {
            if (members_ == null) {
              members_ = new global::HEAL.Attic.StorableTypeMembersBox();
            }
            input.ReadMessage(members_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TypeMessage : pb::IMessage<TypeMessage> {
    private static readonly pb::MessageParser<TypeMessage> _parser = new pb::MessageParser<TypeMessage>(() => new TypeMessage());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TypeMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HEAL.Attic.PersistenceMessagesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeMessage(TypeMessage other) : this() {
      typeId_ = other.typeId_;
      genericTypeMsgIds_ = other.genericTypeMsgIds_.Clone();
      transformerId_ = other.transformerId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeMessage Clone() {
      return new TypeMessage(this);
    }

    /// <summary>Field number for the "type_id" field.</summary>
    public const int TypeIdFieldNumber = 1;
    private uint typeId_;
    /// <summary>
    /// index into Bundle.type_guids
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TypeId {
      get { return typeId_; }
      set {
        typeId_ = value;
      }
    }

    /// <summary>Field number for the "generic_type_msg_ids" field.</summary>
    public const int GenericTypeMsgIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<uint> _repeated_genericTypeMsgIds_codec
        = pb::FieldCodec.ForUInt32(18);
    private readonly pbc::RepeatedField<uint> genericTypeMsgIds_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// index into Bundle.typeMessages (for each generic type argument)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> GenericTypeMsgIds {
      get { return genericTypeMsgIds_; }
    }

    /// <summary>Field number for the "transformerId" field.</summary>
    public const int TransformerIdFieldNumber = 3;
    private uint transformerId_;
    /// <summary>
    /// index into Bundle.transformer_guids
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TransformerId {
      get { return transformerId_; }
      set {
        transformerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TypeMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TypeMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TypeId != other.TypeId) return false;
      if(!genericTypeMsgIds_.Equals(other.genericTypeMsgIds_)) return false;
      if (TransformerId != other.TransformerId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TypeId != 0) hash ^= TypeId.GetHashCode();
      hash ^= genericTypeMsgIds_.GetHashCode();
      if (TransformerId != 0) hash ^= TransformerId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TypeId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(TypeId);
      }
      genericTypeMsgIds_.WriteTo(output, _repeated_genericTypeMsgIds_codec);
      if (TransformerId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(TransformerId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TypeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TypeId);
      }
      size += genericTypeMsgIds_.CalculateSize(_repeated_genericTypeMsgIds_codec);
      if (TransformerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TransformerId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TypeMessage other) {
      if (other == null) {
        return;
      }
      if (other.TypeId != 0) {
        TypeId = other.TypeId;
      }
      genericTypeMsgIds_.Add(other.genericTypeMsgIds_);
      if (other.TransformerId != 0) {
        TransformerId = other.TransformerId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            TypeId = input.ReadUInt32();
            break;
          }
          case 18:
          case 16: {
            genericTypeMsgIds_.AddEntriesFrom(input, _repeated_genericTypeMsgIds_codec);
            break;
          }
          case 24: {
            TransformerId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ScalarValueBox : pb::IMessage<ScalarValueBox> {
    private static readonly pb::MessageParser<ScalarValueBox> _parser = new pb::MessageParser<ScalarValueBox>(() => new ScalarValueBox());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ScalarValueBox> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HEAL.Attic.PersistenceMessagesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScalarValueBox() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScalarValueBox(ScalarValueBox other) : this() {
      long_ = other.long_;
      uLong_ = other.uLong_;
      float_ = other.float_;
      double_ = other.double_;
      bytes_ = other.bytes_;
      sLong_ = other.sLong_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScalarValueBox Clone() {
      return new ScalarValueBox(this);
    }

    /// <summary>Field number for the "long" field.</summary>
    public const int LongFieldNumber = 3;
    private long long_;
    /// <summary>
    ///bool bool = 1;
    ///int32 int = 2;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Long {
      get { return long_; }
      set {
        long_ = value;
      }
    }

    /// <summary>Field number for the "u_long" field.</summary>
    public const int ULongFieldNumber = 5;
    private ulong uLong_;
    /// <summary>
    ///uint32 u_int = 4;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ULong {
      get { return uLong_; }
      set {
        uLong_ = value;
      }
    }

    /// <summary>Field number for the "float" field.</summary>
    public const int FloatFieldNumber = 6;
    private float float_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Float {
      get { return float_; }
      set {
        float_ = value;
      }
    }

    /// <summary>Field number for the "double" field.</summary>
    public const int DoubleFieldNumber = 7;
    private double double_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Double {
      get { return double_; }
      set {
        double_ = value;
      }
    }

    /// <summary>Field number for the "bytes" field.</summary>
    public const int BytesFieldNumber = 8;
    private pb::ByteString bytes_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Bytes {
      get { return bytes_; }
      set {
        bytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "s_long" field.</summary>
    public const int SLongFieldNumber = 10;
    private long sLong_;
    /// <summary>
    ///sint32 s_int = 9;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SLong {
      get { return sLong_; }
      set {
        sLong_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ScalarValueBox);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ScalarValueBox other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Long != other.Long) return false;
      if (ULong != other.ULong) return false;
      if (Float != other.Float) return false;
      if (Double != other.Double) return false;
      if (Bytes != other.Bytes) return false;
      if (SLong != other.SLong) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Long != 0L) hash ^= Long.GetHashCode();
      if (ULong != 0UL) hash ^= ULong.GetHashCode();
      if (Float != 0F) hash ^= Float.GetHashCode();
      if (Double != 0D) hash ^= Double.GetHashCode();
      if (Bytes.Length != 0) hash ^= Bytes.GetHashCode();
      if (SLong != 0L) hash ^= SLong.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Long != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Long);
      }
      if (ULong != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(ULong);
      }
      if (Float != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Float);
      }
      if (Double != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(Double);
      }
      if (Bytes.Length != 0) {
        output.WriteRawTag(66);
        output.WriteBytes(Bytes);
      }
      if (SLong != 0L) {
        output.WriteRawTag(80);
        output.WriteSInt64(SLong);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Long != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Long);
      }
      if (ULong != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ULong);
      }
      if (Float != 0F) {
        size += 1 + 4;
      }
      if (Double != 0D) {
        size += 1 + 8;
      }
      if (Bytes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bytes);
      }
      if (SLong != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(SLong);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ScalarValueBox other) {
      if (other == null) {
        return;
      }
      if (other.Long != 0L) {
        Long = other.Long;
      }
      if (other.ULong != 0UL) {
        ULong = other.ULong;
      }
      if (other.Float != 0F) {
        Float = other.Float;
      }
      if (other.Double != 0D) {
        Double = other.Double;
      }
      if (other.Bytes.Length != 0) {
        Bytes = other.Bytes;
      }
      if (other.SLong != 0L) {
        SLong = other.SLong;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 24: {
            Long = input.ReadInt64();
            break;
          }
          case 40: {
            ULong = input.ReadUInt64();
            break;
          }
          case 53: {
            Float = input.ReadFloat();
            break;
          }
          case 57: {
            Double = input.ReadDouble();
            break;
          }
          case 66: {
            Bytes = input.ReadBytes();
            break;
          }
          case 80: {
            SLong = input.ReadSInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// for collection types and arrays
  /// </summary>
  public sealed partial class RepeatedValueBox : pb::IMessage<RepeatedValueBox> {
    private static readonly pb::MessageParser<RepeatedValueBox> _parser = new pb::MessageParser<RepeatedValueBox>(() => new RepeatedValueBox());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RepeatedValueBox> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HEAL.Attic.PersistenceMessagesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepeatedValueBox() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepeatedValueBox(RepeatedValueBox other) : this() {
      Bools = other.bools_ != null ? other.Bools.Clone() : null;
      Ints = other.ints_ != null ? other.Ints.Clone() : null;
      Longs = other.longs_ != null ? other.Longs.Clone() : null;
      UInts = other.uInts_ != null ? other.UInts.Clone() : null;
      ULongs = other.uLongs_ != null ? other.ULongs.Clone() : null;
      Floats = other.floats_ != null ? other.Floats.Clone() : null;
      Doubles = other.doubles_ != null ? other.Doubles.Clone() : null;
      SInts = other.sInts_ != null ? other.SInts.Clone() : null;
      SLongs = other.sLongs_ != null ? other.SLongs.Clone() : null;
      Kvps = other.kvps_ != null ? other.Kvps.Clone() : null;
      comparerId_ = other.comparerId_;
      comparerTypeId_ = other.comparerTypeId_;
      arrayInfoId_ = other.arrayInfoId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepeatedValueBox Clone() {
      return new RepeatedValueBox(this);
    }

    /// <summary>Field number for the "bools" field.</summary>
    public const int BoolsFieldNumber = 1;
    private global::HEAL.Attic.RepeatedBoolBox bools_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HEAL.Attic.RepeatedBoolBox Bools {
      get { return bools_; }
      set {
        bools_ = value;
      }
    }

    /// <summary>Field number for the "ints" field.</summary>
    public const int IntsFieldNumber = 2;
    private global::HEAL.Attic.RepeatedIntBox ints_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HEAL.Attic.RepeatedIntBox Ints {
      get { return ints_; }
      set {
        ints_ = value;
      }
    }

    /// <summary>Field number for the "longs" field.</summary>
    public const int LongsFieldNumber = 3;
    private global::HEAL.Attic.RepeatedLongBox longs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HEAL.Attic.RepeatedLongBox Longs {
      get { return longs_; }
      set {
        longs_ = value;
      }
    }

    /// <summary>Field number for the "u_ints" field.</summary>
    public const int UIntsFieldNumber = 4;
    private global::HEAL.Attic.RepeatedUIntBox uInts_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HEAL.Attic.RepeatedUIntBox UInts {
      get { return uInts_; }
      set {
        uInts_ = value;
      }
    }

    /// <summary>Field number for the "u_longs" field.</summary>
    public const int ULongsFieldNumber = 5;
    private global::HEAL.Attic.RepeatedULongBox uLongs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HEAL.Attic.RepeatedULongBox ULongs {
      get { return uLongs_; }
      set {
        uLongs_ = value;
      }
    }

    /// <summary>Field number for the "floats" field.</summary>
    public const int FloatsFieldNumber = 6;
    private global::HEAL.Attic.RepeatedFloatBox floats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HEAL.Attic.RepeatedFloatBox Floats {
      get { return floats_; }
      set {
        floats_ = value;
      }
    }

    /// <summary>Field number for the "doubles" field.</summary>
    public const int DoublesFieldNumber = 7;
    private global::HEAL.Attic.RepeatedDoubleBox doubles_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HEAL.Attic.RepeatedDoubleBox Doubles {
      get { return doubles_; }
      set {
        doubles_ = value;
      }
    }

    /// <summary>Field number for the "s_ints" field.</summary>
    public const int SIntsFieldNumber = 8;
    private global::HEAL.Attic.RepeatedSIntBox sInts_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HEAL.Attic.RepeatedSIntBox SInts {
      get { return sInts_; }
      set {
        sInts_ = value;
      }
    }

    /// <summary>Field number for the "s_longs" field.</summary>
    public const int SLongsFieldNumber = 9;
    private global::HEAL.Attic.RepeatedSLongBox sLongs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HEAL.Attic.RepeatedSLongBox SLongs {
      get { return sLongs_; }
      set {
        sLongs_ = value;
      }
    }

    /// <summary>Field number for the "kvps" field.</summary>
    public const int KvpsFieldNumber = 10;
    private global::HEAL.Attic.RepeatedKeyValuePairsBox kvps_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HEAL.Attic.RepeatedKeyValuePairsBox Kvps {
      get { return kvps_; }
      set {
        kvps_ = value;
      }
    }

    /// <summary>Field number for the "comparer_id" field.</summary>
    public const int ComparerIdFieldNumber = 11;
    private uint comparerId_;
    /// <summary>
    /// some collections have a StorableType comparer (index into Bundle.boxes)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ComparerId {
      get { return comparerId_; }
      set {
        comparerId_ = value;
      }
    }

    /// <summary>Field number for the "comparer_type_id" field.</summary>
    public const int ComparerTypeIdFieldNumber = 12;
    private uint comparerTypeId_;
    /// <summary>
    /// other collection only have a comparer type (index into Bundle.typeMessages)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ComparerTypeId {
      get { return comparerTypeId_; }
      set {
        comparerTypeId_ = value;
      }
    }

    /// <summary>Field number for the "array_info_id" field.</summary>
    public const int ArrayInfoIdFieldNumber = 13;
    private uint arrayInfoId_;
    /// <summary>
    /// index into Boxes.arrayInfos
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ArrayInfoId {
      get { return arrayInfoId_; }
      set {
        arrayInfoId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RepeatedValueBox);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RepeatedValueBox other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Bools, other.Bools)) return false;
      if (!object.Equals(Ints, other.Ints)) return false;
      if (!object.Equals(Longs, other.Longs)) return false;
      if (!object.Equals(UInts, other.UInts)) return false;
      if (!object.Equals(ULongs, other.ULongs)) return false;
      if (!object.Equals(Floats, other.Floats)) return false;
      if (!object.Equals(Doubles, other.Doubles)) return false;
      if (!object.Equals(SInts, other.SInts)) return false;
      if (!object.Equals(SLongs, other.SLongs)) return false;
      if (!object.Equals(Kvps, other.Kvps)) return false;
      if (ComparerId != other.ComparerId) return false;
      if (ComparerTypeId != other.ComparerTypeId) return false;
      if (ArrayInfoId != other.ArrayInfoId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (bools_ != null) hash ^= Bools.GetHashCode();
      if (ints_ != null) hash ^= Ints.GetHashCode();
      if (longs_ != null) hash ^= Longs.GetHashCode();
      if (uInts_ != null) hash ^= UInts.GetHashCode();
      if (uLongs_ != null) hash ^= ULongs.GetHashCode();
      if (floats_ != null) hash ^= Floats.GetHashCode();
      if (doubles_ != null) hash ^= Doubles.GetHashCode();
      if (sInts_ != null) hash ^= SInts.GetHashCode();
      if (sLongs_ != null) hash ^= SLongs.GetHashCode();
      if (kvps_ != null) hash ^= Kvps.GetHashCode();
      if (ComparerId != 0) hash ^= ComparerId.GetHashCode();
      if (ComparerTypeId != 0) hash ^= ComparerTypeId.GetHashCode();
      if (ArrayInfoId != 0) hash ^= ArrayInfoId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (bools_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Bools);
      }
      if (ints_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Ints);
      }
      if (longs_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Longs);
      }
      if (uInts_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UInts);
      }
      if (uLongs_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ULongs);
      }
      if (floats_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Floats);
      }
      if (doubles_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Doubles);
      }
      if (sInts_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(SInts);
      }
      if (sLongs_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(SLongs);
      }
      if (kvps_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Kvps);
      }
      if (ComparerId != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(ComparerId);
      }
      if (ComparerTypeId != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(ComparerTypeId);
      }
      if (ArrayInfoId != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(ArrayInfoId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (bools_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bools);
      }
      if (ints_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ints);
      }
      if (longs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Longs);
      }
      if (uInts_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UInts);
      }
      if (uLongs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ULongs);
      }
      if (floats_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Floats);
      }
      if (doubles_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Doubles);
      }
      if (sInts_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SInts);
      }
      if (sLongs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SLongs);
      }
      if (kvps_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Kvps);
      }
      if (ComparerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ComparerId);
      }
      if (ComparerTypeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ComparerTypeId);
      }
      if (ArrayInfoId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ArrayInfoId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RepeatedValueBox other) {
      if (other == null) {
        return;
      }
      if (other.bools_ != null) {
        if (bools_ == null) {
          bools_ = new global::HEAL.Attic.RepeatedBoolBox();
        }
        Bools.MergeFrom(other.Bools);
      }
      if (other.ints_ != null) {
        if (ints_ == null) {
          ints_ = new global::HEAL.Attic.RepeatedIntBox();
        }
        Ints.MergeFrom(other.Ints);
      }
      if (other.longs_ != null) {
        if (longs_ == null) {
          longs_ = new global::HEAL.Attic.RepeatedLongBox();
        }
        Longs.MergeFrom(other.Longs);
      }
      if (other.uInts_ != null) {
        if (uInts_ == null) {
          uInts_ = new global::HEAL.Attic.RepeatedUIntBox();
        }
        UInts.MergeFrom(other.UInts);
      }
      if (other.uLongs_ != null) {
        if (uLongs_ == null) {
          uLongs_ = new global::HEAL.Attic.RepeatedULongBox();
        }
        ULongs.MergeFrom(other.ULongs);
      }
      if (other.floats_ != null) {
        if (floats_ == null) {
          floats_ = new global::HEAL.Attic.RepeatedFloatBox();
        }
        Floats.MergeFrom(other.Floats);
      }
      if (other.doubles_ != null) {
        if (doubles_ == null) {
          doubles_ = new global::HEAL.Attic.RepeatedDoubleBox();
        }
        Doubles.MergeFrom(other.Doubles);
      }
      if (other.sInts_ != null) {
        if (sInts_ == null) {
          sInts_ = new global::HEAL.Attic.RepeatedSIntBox();
        }
        SInts.MergeFrom(other.SInts);
      }
      if (other.sLongs_ != null) {
        if (sLongs_ == null) {
          sLongs_ = new global::HEAL.Attic.RepeatedSLongBox();
        }
        SLongs.MergeFrom(other.SLongs);
      }
      if (other.kvps_ != null) {
        if (kvps_ == null) {
          kvps_ = new global::HEAL.Attic.RepeatedKeyValuePairsBox();
        }
        Kvps.MergeFrom(other.Kvps);
      }
      if (other.ComparerId != 0) {
        ComparerId = other.ComparerId;
      }
      if (other.ComparerTypeId != 0) {
        ComparerTypeId = other.ComparerTypeId;
      }
      if (other.ArrayInfoId != 0) {
        ArrayInfoId = other.ArrayInfoId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (bools_ == null) {
              bools_ = new global::HEAL.Attic.RepeatedBoolBox();
            }
            input.ReadMessage(bools_);
            break;
          }
          case 18: {
            if (ints_ == null) {
              ints_ = new global::HEAL.Attic.RepeatedIntBox();
            }
            input.ReadMessage(ints_);
            break;
          }
          case 26: {
            if (longs_ == null) {
              longs_ = new global::HEAL.Attic.RepeatedLongBox();
            }
            input.ReadMessage(longs_);
            break;
          }
          case 34: {
            if (uInts_ == null) {
              uInts_ = new global::HEAL.Attic.RepeatedUIntBox();
            }
            input.ReadMessage(uInts_);
            break;
          }
          case 42: {
            if (uLongs_ == null) {
              uLongs_ = new global::HEAL.Attic.RepeatedULongBox();
            }
            input.ReadMessage(uLongs_);
            break;
          }
          case 50: {
            if (floats_ == null) {
              floats_ = new global::HEAL.Attic.RepeatedFloatBox();
            }
            input.ReadMessage(floats_);
            break;
          }
          case 58: {
            if (doubles_ == null) {
              doubles_ = new global::HEAL.Attic.RepeatedDoubleBox();
            }
            input.ReadMessage(doubles_);
            break;
          }
          case 66: {
            if (sInts_ == null) {
              sInts_ = new global::HEAL.Attic.RepeatedSIntBox();
            }
            input.ReadMessage(sInts_);
            break;
          }
          case 74: {
            if (sLongs_ == null) {
              sLongs_ = new global::HEAL.Attic.RepeatedSLongBox();
            }
            input.ReadMessage(sLongs_);
            break;
          }
          case 82: {
            if (kvps_ == null) {
              kvps_ = new global::HEAL.Attic.RepeatedKeyValuePairsBox();
            }
            input.ReadMessage(kvps_);
            break;
          }
          case 88: {
            ComparerId = input.ReadUInt32();
            break;
          }
          case 96: {
            ComparerTypeId = input.ReadUInt32();
            break;
          }
          case 104: {
            ArrayInfoId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ArrayInfo : pb::IMessage<ArrayInfo> {
    private static readonly pb::MessageParser<ArrayInfo> _parser = new pb::MessageParser<ArrayInfo>(() => new ArrayInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArrayInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HEAL.Attic.PersistenceMessagesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArrayInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArrayInfo(ArrayInfo other) : this() {
      rank_ = other.rank_;
      lengths_ = other.lengths_.Clone();
      lowerBounds_ = other.lowerBounds_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArrayInfo Clone() {
      return new ArrayInfo(this);
    }

    /// <summary>Field number for the "rank" field.</summary>
    public const int RankFieldNumber = 1;
    private int rank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Rank {
      get { return rank_; }
      set {
        rank_ = value;
      }
    }

    /// <summary>Field number for the "lengths" field.</summary>
    public const int LengthsFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_lengths_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> lengths_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Lengths {
      get { return lengths_; }
    }

    /// <summary>Field number for the "lowerBounds" field.</summary>
    public const int LowerBoundsFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_lowerBounds_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> lowerBounds_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> LowerBounds {
      get { return lowerBounds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArrayInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArrayInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Rank != other.Rank) return false;
      if(!lengths_.Equals(other.lengths_)) return false;
      if(!lowerBounds_.Equals(other.lowerBounds_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Rank != 0) hash ^= Rank.GetHashCode();
      hash ^= lengths_.GetHashCode();
      hash ^= lowerBounds_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Rank != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Rank);
      }
      lengths_.WriteTo(output, _repeated_lengths_codec);
      lowerBounds_.WriteTo(output, _repeated_lowerBounds_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Rank != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rank);
      }
      size += lengths_.CalculateSize(_repeated_lengths_codec);
      size += lowerBounds_.CalculateSize(_repeated_lowerBounds_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArrayInfo other) {
      if (other == null) {
        return;
      }
      if (other.Rank != 0) {
        Rank = other.Rank;
      }
      lengths_.Add(other.lengths_);
      lowerBounds_.Add(other.lowerBounds_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Rank = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            lengths_.AddEntriesFrom(input, _repeated_lengths_codec);
            break;
          }
          case 26:
          case 24: {
            lowerBounds_.AddEntriesFrom(input, _repeated_lowerBounds_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StorableTypeMembersBox : pb::IMessage<StorableTypeMembersBox> {
    private static readonly pb::MessageParser<StorableTypeMembersBox> _parser = new pb::MessageParser<StorableTypeMembersBox>(() => new StorableTypeMembersBox());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StorableTypeMembersBox> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HEAL.Attic.PersistenceMessagesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorableTypeMembersBox() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorableTypeMembersBox(StorableTypeMembersBox other) : this() {
      storableTypeLayoutId_ = other.storableTypeLayoutId_;
      valueBoxId_ = other.valueBoxId_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorableTypeMembersBox Clone() {
      return new StorableTypeMembersBox(this);
    }

    /// <summary>Field number for the "storable_type_layout_id" field.</summary>
    public const int StorableTypeLayoutIdFieldNumber = 1;
    private uint storableTypeLayoutId_;
    /// <summary>
    /// index into Bundle.layouts
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StorableTypeLayoutId {
      get { return storableTypeLayoutId_; }
      set {
        storableTypeLayoutId_ = value;
      }
    }

    /// <summary>Field number for the "value_box_id" field.</summary>
    public const int ValueBoxIdFieldNumber = 2;
    private static readonly pb::FieldCodec<uint> _repeated_valueBoxId_codec
        = pb::FieldCodec.ForUInt32(18);
    private readonly pbc::RepeatedField<uint> valueBoxId_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// 3
    /// 4;
    /// StorableTypeMembersBox parent = 5;       // box with members of the base class
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> ValueBoxId {
      get { return valueBoxId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StorableTypeMembersBox);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StorableTypeMembersBox other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StorableTypeLayoutId != other.StorableTypeLayoutId) return false;
      if(!valueBoxId_.Equals(other.valueBoxId_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StorableTypeLayoutId != 0) hash ^= StorableTypeLayoutId.GetHashCode();
      hash ^= valueBoxId_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StorableTypeLayoutId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StorableTypeLayoutId);
      }
      valueBoxId_.WriteTo(output, _repeated_valueBoxId_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StorableTypeLayoutId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StorableTypeLayoutId);
      }
      size += valueBoxId_.CalculateSize(_repeated_valueBoxId_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StorableTypeMembersBox other) {
      if (other == null) {
        return;
      }
      if (other.StorableTypeLayoutId != 0) {
        StorableTypeLayoutId = other.StorableTypeLayoutId;
      }
      valueBoxId_.Add(other.valueBoxId_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            StorableTypeLayoutId = input.ReadUInt32();
            break;
          }
          case 18:
          case 16: {
            valueBoxId_.AddEntriesFrom(input, _repeated_valueBoxId_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RepeatedBoolBox : pb::IMessage<RepeatedBoolBox> {
    private static readonly pb::MessageParser<RepeatedBoolBox> _parser = new pb::MessageParser<RepeatedBoolBox>(() => new RepeatedBoolBox());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RepeatedBoolBox> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HEAL.Attic.PersistenceMessagesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepeatedBoolBox() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepeatedBoolBox(RepeatedBoolBox other) : this() {
      values_ = other.values_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepeatedBoolBox Clone() {
      return new RepeatedBoolBox(this);
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<bool> _repeated_values_codec
        = pb::FieldCodec.ForBool(10);
    private readonly pbc::RepeatedField<bool> values_ = new pbc::RepeatedField<bool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<bool> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RepeatedBoolBox);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RepeatedBoolBox other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      values_.WriteTo(output, _repeated_values_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RepeatedBoolBox other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10:
          case 8: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RepeatedIntBox : pb::IMessage<RepeatedIntBox> {
    private static readonly pb::MessageParser<RepeatedIntBox> _parser = new pb::MessageParser<RepeatedIntBox>(() => new RepeatedIntBox());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RepeatedIntBox> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HEAL.Attic.PersistenceMessagesReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepeatedIntBox() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepeatedIntBox(RepeatedIntBox other) : this() {
      values_ = other.values_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepeatedIntBox Clone() {
      return new RepeatedIntBox(this);
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_values_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> values_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RepeatedIntBox);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RepeatedIntBox other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      values_.WriteTo(output, _repeated_values_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RepeatedIntBox other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10:
          case 8: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RepeatedLongBox : pb::IMessage<RepeatedLongBox> {
    private static readonly pb::MessageParser<RepeatedLongBox> _parser = new pb::MessageParser<RepeatedLongBox>(() => new RepeatedLongBox());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RepeatedLongBox> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HEAL.Attic.PersistenceMessagesReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepeatedLongBox() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepeatedLongBox(RepeatedLongBox other) : this() {
      values_ = other.values_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepeatedLongBox Clone() {
      return new RepeatedLongBox(this);
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_values_codec
        = pb::FieldCodec.ForInt64(10);
    private readonly pbc::RepeatedField<long> values_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RepeatedLongBox);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RepeatedLongBox other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      values_.WriteTo(output, _repeated_values_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RepeatedLongBox other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10:
          case 8: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RepeatedUIntBox : pb::IMessage<RepeatedUIntBox> {
    private static readonly pb::MessageParser<RepeatedUIntBox> _parser = new pb::MessageParser<RepeatedUIntBox>(() => new RepeatedUIntBox());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RepeatedUIntBox> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HEAL.Attic.PersistenceMessagesReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepeatedUIntBox() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepeatedUIntBox(RepeatedUIntBox other) : this() {
      values_ = other.values_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepeatedUIntBox Clone() {
      return new RepeatedUIntBox(this);
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<uint> _repeated_values_codec
        = pb::FieldCodec.ForUInt32(10);
    private readonly pbc::RepeatedField<uint> values_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RepeatedUIntBox);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RepeatedUIntBox other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      values_.WriteTo(output, _repeated_values_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RepeatedUIntBox other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10:
          case 8: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RepeatedULongBox : pb::IMessage<RepeatedULongBox> {
    private static readonly pb::MessageParser<RepeatedULongBox> _parser = new pb::MessageParser<RepeatedULongBox>(() => new RepeatedULongBox());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RepeatedULongBox> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HEAL.Attic.PersistenceMessagesReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepeatedULongBox() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepeatedULongBox(RepeatedULongBox other) : this() {
      values_ = other.values_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepeatedULongBox Clone() {
      return new RepeatedULongBox(this);
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<ulong> _repeated_values_codec
        = pb::FieldCodec.ForUInt64(10);
    private readonly pbc::RepeatedField<ulong> values_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RepeatedULongBox);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RepeatedULongBox other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      values_.WriteTo(output, _repeated_values_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RepeatedULongBox other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10:
          case 8: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RepeatedFloatBox : pb::IMessage<RepeatedFloatBox> {
    private static readonly pb::MessageParser<RepeatedFloatBox> _parser = new pb::MessageParser<RepeatedFloatBox>(() => new RepeatedFloatBox());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RepeatedFloatBox> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HEAL.Attic.PersistenceMessagesReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepeatedFloatBox() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepeatedFloatBox(RepeatedFloatBox other) : this() {
      values_ = other.values_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepeatedFloatBox Clone() {
      return new RepeatedFloatBox(this);
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<float> _repeated_values_codec
        = pb::FieldCodec.ForFloat(10);
    private readonly pbc::RepeatedField<float> values_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RepeatedFloatBox);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RepeatedFloatBox other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      values_.WriteTo(output, _repeated_values_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RepeatedFloatBox other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10:
          case 13: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RepeatedDoubleBox : pb::IMessage<RepeatedDoubleBox> {
    private static readonly pb::MessageParser<RepeatedDoubleBox> _parser = new pb::MessageParser<RepeatedDoubleBox>(() => new RepeatedDoubleBox());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RepeatedDoubleBox> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HEAL.Attic.PersistenceMessagesReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepeatedDoubleBox() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepeatedDoubleBox(RepeatedDoubleBox other) : this() {
      values_ = other.values_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepeatedDoubleBox Clone() {
      return new RepeatedDoubleBox(this);
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<double> _repeated_values_codec
        = pb::FieldCodec.ForDouble(10);
    private readonly pbc::RepeatedField<double> values_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<double> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RepeatedDoubleBox);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RepeatedDoubleBox other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      values_.WriteTo(output, _repeated_values_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RepeatedDoubleBox other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10:
          case 9: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RepeatedSIntBox : pb::IMessage<RepeatedSIntBox> {
    private static readonly pb::MessageParser<RepeatedSIntBox> _parser = new pb::MessageParser<RepeatedSIntBox>(() => new RepeatedSIntBox());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RepeatedSIntBox> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HEAL.Attic.PersistenceMessagesReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepeatedSIntBox() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepeatedSIntBox(RepeatedSIntBox other) : this() {
      values_ = other.values_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepeatedSIntBox Clone() {
      return new RepeatedSIntBox(this);
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_values_codec
        = pb::FieldCodec.ForSInt32(10);
    private readonly pbc::RepeatedField<int> values_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RepeatedSIntBox);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RepeatedSIntBox other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      values_.WriteTo(output, _repeated_values_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RepeatedSIntBox other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10:
          case 8: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RepeatedSLongBox : pb::IMessage<RepeatedSLongBox> {
    private static readonly pb::MessageParser<RepeatedSLongBox> _parser = new pb::MessageParser<RepeatedSLongBox>(() => new RepeatedSLongBox());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RepeatedSLongBox> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HEAL.Attic.PersistenceMessagesReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepeatedSLongBox() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepeatedSLongBox(RepeatedSLongBox other) : this() {
      values_ = other.values_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepeatedSLongBox Clone() {
      return new RepeatedSLongBox(this);
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_values_codec
        = pb::FieldCodec.ForSInt64(10);
    private readonly pbc::RepeatedField<long> values_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RepeatedSLongBox);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RepeatedSLongBox other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      values_.WriteTo(output, _repeated_values_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RepeatedSLongBox other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10:
          case 8: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RepeatedKeyValuePairsBox : pb::IMessage<RepeatedKeyValuePairsBox> {
    private static readonly pb::MessageParser<RepeatedKeyValuePairsBox> _parser = new pb::MessageParser<RepeatedKeyValuePairsBox>(() => new RepeatedKeyValuePairsBox());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RepeatedKeyValuePairsBox> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HEAL.Attic.PersistenceMessagesReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepeatedKeyValuePairsBox() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepeatedKeyValuePairsBox(RepeatedKeyValuePairsBox other) : this() {
      keys_ = other.keys_.Clone();
      values_ = other.values_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepeatedKeyValuePairsBox Clone() {
      return new RepeatedKeyValuePairsBox(this);
    }

    /// <summary>Field number for the "keys" field.</summary>
    public const int KeysFieldNumber = 1;
    private static readonly pb::FieldCodec<uint> _repeated_keys_codec
        = pb::FieldCodec.ForUInt32(10);
    private readonly pbc::RepeatedField<uint> keys_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Keys {
      get { return keys_; }
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 2;
    private static readonly pb::FieldCodec<uint> _repeated_values_codec
        = pb::FieldCodec.ForUInt32(18);
    private readonly pbc::RepeatedField<uint> values_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// map&lt;uint32, uint32> key_value_pairs = 10;   // separate repeated keys and values is more lightweight
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RepeatedKeyValuePairsBox);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RepeatedKeyValuePairsBox other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!keys_.Equals(other.keys_)) return false;
      if(!values_.Equals(other.values_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= keys_.GetHashCode();
      hash ^= values_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      keys_.WriteTo(output, _repeated_keys_codec);
      values_.WriteTo(output, _repeated_values_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += keys_.CalculateSize(_repeated_keys_codec);
      size += values_.CalculateSize(_repeated_values_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RepeatedKeyValuePairsBox other) {
      if (other == null) {
        return;
      }
      keys_.Add(other.keys_);
      values_.Add(other.values_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10:
          case 8: {
            keys_.AddEntriesFrom(input, _repeated_keys_codec);
            break;
          }
          case 18:
          case 16: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StorableTypeLayoutBox : pb::IMessage<StorableTypeLayoutBox> {
    private static readonly pb::MessageParser<StorableTypeLayoutBox> _parser = new pb::MessageParser<StorableTypeLayoutBox>(() => new StorableTypeLayoutBox());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StorableTypeLayoutBox> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HEAL.Attic.PersistenceMessagesReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorableTypeLayoutBox() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorableTypeLayoutBox(StorableTypeLayoutBox other) : this() {
      typeGuid_ = other.typeGuid_;
      parent_ = other.parent_;
      names_ = other.names_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorableTypeLayoutBox Clone() {
      return new StorableTypeLayoutBox(this);
    }

    /// <summary>Field number for the "type_guid" field.</summary>
    public const int TypeGuidFieldNumber = 1;
    private uint typeGuid_;
    /// <summary>
    /// index into Bundle.type_guids
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TypeGuid {
      get { return typeGuid_; }
      set {
        typeGuid_ = value;
      }
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 2;
    private uint parent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Parent {
      get { return parent_; }
      set {
        parent_ = value;
      }
    }

    /// <summary>Field number for the "names" field.</summary>
    public const int NamesFieldNumber = 3;
    private static readonly pb::FieldCodec<uint> _repeated_names_codec
        = pb::FieldCodec.ForUInt32(26);
    private readonly pbc::RepeatedField<uint> names_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// index into Bundle.strings
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Names {
      get { return names_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StorableTypeLayoutBox);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StorableTypeLayoutBox other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TypeGuid != other.TypeGuid) return false;
      if (Parent != other.Parent) return false;
      if(!names_.Equals(other.names_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TypeGuid != 0) hash ^= TypeGuid.GetHashCode();
      if (Parent != 0) hash ^= Parent.GetHashCode();
      hash ^= names_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TypeGuid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(TypeGuid);
      }
      if (Parent != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Parent);
      }
      names_.WriteTo(output, _repeated_names_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TypeGuid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TypeGuid);
      }
      if (Parent != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Parent);
      }
      size += names_.CalculateSize(_repeated_names_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StorableTypeLayoutBox other) {
      if (other == null) {
        return;
      }
      if (other.TypeGuid != 0) {
        TypeGuid = other.TypeGuid;
      }
      if (other.Parent != 0) {
        Parent = other.Parent;
      }
      names_.Add(other.names_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            TypeGuid = input.ReadUInt32();
            break;
          }
          case 16: {
            Parent = input.ReadUInt32();
            break;
          }
          case 26:
          case 24: {
            names_.AddEntriesFrom(input, _repeated_names_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
